# Pré-requisitos para rodar o cluster

[Habilitar o 'foward' de pacotes IPV4](https://kubernetes.io/docs/setup/production-environment/container-runtimes/#prerequisite-ipv4-forwarding-optional)

```bash
# sysctl params required by setup, params persist across reboots
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.ipv4.ip_forward = 1
EOF

# Apply sysctl params without reboot
sudo sysctl --system

#Verify that net.ipv4.ip_forward is set to 1 with
sysctl net.ipv4.ip_forward
```

Agora para configurar o containerd (apenas ele) nas VMs que é o novo padrão [(Link)](https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository)

```bash
# Add Docker's official GPG key:

sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

#Install the Docker packages.

sudo apt-get update
sudo apt-get install containerd.io -y
```

Arquivo de configuração padrão do containerd, basicamente pegar o arquivo generico do containerd e jogar dentro do `config.toml`

```bash
containerd config default > /etc/containerd/config.toml
```

Desabilitar o SWAP, verificar no fstab se caso remover, depois só rodar um `swapoff -a`

```bash
#Verify swap

cat /proc/swaps
cat /etc/fstab
```

[Instalar kubeadm, kubelet and kubectl](https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl)

```bash
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl
```

# Criação do cluster Kubernetes

